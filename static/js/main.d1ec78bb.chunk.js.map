{"version":3,"sources":["modules/reducers/tasks.js","modules/action.js","modules/reducers/workflows.js","modules/reducers/index.js","components/Task.js","components/Workflow.js","modules/store.js","App.js","index.js"],"names":["defaultState","id","content","Types","DRAG_ENDED","title","taskIds","done","combineReducers","tasks","state","type","workflows","payload","workflow","workflowId","newIdsArray","Array","from","splice","sourceIndex","destinationIndex","draggableId","Container","styled","div","Task","task","index","provided","ref","innerRef","draggableProps","dragHandleProps","initialState","Title","h3","TaskList","Workflow","useSelector","map","taskId","droppableId","key","placeholder","App","onDragEnd","result","destination","source","handleDragEnd","props","this","Object","values","Component","connect","dispatch","reduxStore","createStore","reducer","applyMiddleware","ReduxThunk","logger","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.d1ec78bb.chunk.js","sourcesContent":["// @flow\nimport type { Action } from '../action';\n\nexport type Task = {\n  id: string,\n  content: string,\n};\n\ntype TasksState = {\n  [string]: Task\n};\n\nconst defaultState = {\n  'task-1': { id: 'task-1', content: 'TEST 1' },\n  'task-2': { id: 'task-2', content: 'TEST 2' },\n  'task-3': { id: 'task-3', content: 'TEST 3' },\n  'task-4': { id: 'task-4', content: 'TEST 4' },\n  'task-5': { id: 'task-5', content: 'TEST 5' },\n};\n\nexport default (state: TasksState = defaultState, { type }: Action): TasksState => {\n  if (typeof state === 'undefined') {\n    return defaultState;\n  }\n\n  switch (type) {\n    default:\n      return state;\n  }\n};\n","// @flow\nexport const Types = {\n  DRAG_ENDED: 'DRAG_ENDED',\n};\n\nexport type Action = {\n  type: string,\n  payload: Object,\n};\n\nexport type handleDragEndArgs = {\n  source: any,\n  destination: any,\n  draggableId: any,\n};\n\nexport function handleDragEnd({ source, destination, draggableId }: handleDragEndArgs) {\n  return (dispatch: Function) => {\n    const { index: sourceIndex, droppableId: workflowId } = source;\n    const { index: destinationIndex } = destination;\n\n    return dispatch({\n      type: Types.DRAG_ENDED,\n      payload: {\n        sourceIndex,\n        workflowId,\n        destinationIndex,\n        draggableId,\n      },\n    });\n  };\n}\n","// @flow\nimport { Types } from '../action';\nimport type { Action } from '../action';\n\nexport type Workflow = {\n  id: string,\n  title: string,\n  taskIds: Array<string>\n};\n\ntype WorkflowState = {\n  [string]: Workflow\n};\n\nconst defaultState: WorkflowState = {\n  'to-do': {\n    id: 'to-do',\n    title: 'To Do',\n    taskIds: ['task-1', 'task-2'],\n  },\n  'in-progress': {\n    id: 'in-progress',\n    title: 'In Progress',\n    taskIds: ['task-3', 'task-4'],\n  },\n  done: {\n    id: 'Done',\n    title: 'Done',\n    taskIds: ['task-5'],\n  },\n};\n\nexport default (state: WorkflowState = defaultState, { type, payload }: Action): WorkflowState => {\n  if (typeof state === 'undefined') {\n    return defaultState;\n  }\n\n  switch (type) {\n    case Types.DRAG_ENDED: {\n      const workflow = state[payload.workflowId];\n      const newIdsArray = Array.from(workflow.taskIds);\n      newIdsArray.splice(payload.sourceIndex, 1);\n      newIdsArray.splice(payload.destinationIndex, 0, payload.draggableId);\n\n      return {\n        ...state,\n        [workflow.id]: {\n          ...workflow,\n          taskIds: newIdsArray,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","// @flow\nimport { combineReducers } from 'redux';\nimport tasks from './tasks';\nimport workflows from './workflows';\n\nexport default combineReducers({\n  tasks,\n  workflows,\n});\n","// @flow\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\n\nimport type { Task as TaskType } from '../modules/reducers/tasks';\n\nconst Container = styled.div`\n  background-color: white;\n  padding: 8px;\n  margin-bottom: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n`;\n\ntype TaskProps = { +task: TaskType, +index: number };\n\nconst Task = ({ task, index }: TaskProps) => (\n  <Draggable draggableId={task.id} index={index}>\n    {provided => (\n      <Container\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n      >\n        {task.content}\n      </Container>\n    )}\n  </Draggable>\n);\n\nexport default Task;\n","// @flow\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\n\nimport Task from './Task';\nimport type { Workflow as WorkflowType } from '../modules/reducers/workflows';\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n`;\n\nconst Title = styled.h3`\n  padding: 8px;\n`;\n\nconst TaskList = styled.div`\n  padding: 8px;\n`;\n\ntype WorkflowComponentProps = { +workflow: WorkflowType };\n\nconst Workflow = ({ workflow: { id, title, taskIds } }: WorkflowComponentProps) => {\n  const tasks = useSelector(state => taskIds.map(taskId => state.tasks[taskId]));\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Droppable droppableId={id}>\n        {provided => (\n          <TaskList ref={provided.innerRef}>\n            {tasks.map((task, index) => <Task key={task.id} index={index} task={task} />)}\n            {provided.placeholder}\n          </TaskList>\n        )}\n      </Droppable>\n    </Container>\n  );\n};\n\nexport default Workflow;\n","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\n\nimport reducer from './reducers';\n\nexport default function configureStore(initialState) {\n  const store = createStore(reducer, initialState, applyMiddleware(ReduxThunk, logger));\n\n  if (module.hot) {\n    module.hot.accept(\n      // eslint-disable-next-line global-require\n      './reducers', () => store.replaceReducer(require('./reducers').default),\n    );\n  }\n\n  return store;\n}\n","// @flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport Workflow from './components/Workflow';\nimport { handleDragEnd as handleDragEndAction } from './modules/action';\nimport type { Workflow as WorkflowType } from './modules/reducers/workflows';\n\ntype AppProps = {\n  +handleDragEnd: Function,\n  +workflows: { [string]: WorkflowType },\n}\n\nclass App extends Component<AppProps> {\n  onDragEnd = (result) => {\n    const { destination, source } = result;\n\n    if (\n      !destination\n      || (destination.droppableId === source.droppableId && destination.index === source.index)\n    ) {\n      return;\n    }\n\n    const { handleDragEnd } = this.props;\n\n    handleDragEnd(result);\n  };\n\n  render() {\n    const { workflows } = this.props;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        {(Object.values(workflows): any).map((workflow: WorkflowType) => (\n          <Workflow key={workflow.id} workflow={workflow} />\n        ))}\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ workflows: state.workflows });\n\nexport default connect(mapStateToProps, { handleDragEnd: handleDragEndAction })(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'css-reset/reset.css';\nimport configureStore from './modules/store';\n\nimport App from './App';\n\nconst reduxStore = configureStore();\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={reduxStore}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nrender();\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    render();\n  });\n}\n"],"sourceRoot":""}